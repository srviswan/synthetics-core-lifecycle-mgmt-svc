{\rtf1\ansi\ansicpg1252\cocoartf2822
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\froman\fcharset0 Times-Bold;\f1\froman\fcharset0 Times-Roman;\f2\fmodern\fcharset0 Courier;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red109\green109\blue109;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;\cssrgb\c50196\c50196\c50196;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid2}
{\list\listtemplateid3\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid201\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid3}
{\list\listtemplateid4\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid301\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid4}
{\list\listtemplateid5\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid401\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid5}
{\list\listtemplateid6\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid501\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid6}
{\list\listtemplateid7\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid601\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid7}
{\list\listtemplateid8\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid701\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid8}
{\list\listtemplateid9\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid801\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid9}
{\list\listtemplateid10\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid901\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid10}
{\list\listtemplateid11\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1001\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid11}
{\list\listtemplateid12\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid12}
{\list\listtemplateid13\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1201\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid13}
{\list\listtemplateid14\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1301\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid14}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}{\listoverride\listid3\listoverridecount0\ls3}{\listoverride\listid4\listoverridecount0\ls4}{\listoverride\listid5\listoverridecount0\ls5}{\listoverride\listid6\listoverridecount0\ls6}{\listoverride\listid7\listoverridecount0\ls7}{\listoverride\listid8\listoverridecount0\ls8}{\listoverride\listid9\listoverridecount0\ls9}{\listoverride\listid10\listoverridecount0\ls10}{\listoverride\listid11\listoverridecount0\ls11}{\listoverride\listid12\listoverridecount0\ls12}{\listoverride\listid13\listoverridecount0\ls13}{\listoverride\listid14\listoverridecount0\ls14}}
\paperw11900\paperh16840\margl1440\margr1440\vieww30040\viewh18340\viewkind0
\deftab720
\pard\pardeftab720\sa321\partightenfactor0

\f0\b\fs48 \cf0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 SPEC-1-Swap Life Cycle Management Service\
\pard\pardeftab720\sa298\partightenfactor0

\fs36 \cf0 Background\
\pard\pardeftab720\sa240\partightenfactor0

\f1\b0\fs24 \cf0 Financial institutions trading swaps require a robust life cycle management service to handle the complete journey of a swap after it is captured by the trade capture system. The service integrates with trade blotters and manages positions (lots) and payouts for downstream consumers (settlement, risk, PnL, reporting). The service's canonical state is consumed by valuation/risk services that provide pricing; this service focuses on deterministic lifecycle state, cashflow generation, and settlement instruction routing.\
Key responsibilities\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls1\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Capture and normalize new swap trades from blotters.\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Manage amendments (top-ups, partial unwinds), partial or full terminations.\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Maintain canonical trade records with versioning and full audit trails.\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Generate, update, cancel cashflows (accruals, interest, fees, dividends, principal exchanges, resets).\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Route settlement-eligible cashflows to the settlement system as Protobuf messages.\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Provide deterministic event-sourced state rebuilds for reconciliation and recovery.\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Provide APIs/streams for downstream consumers (valuation, PnL, settlement, reporting).\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa298\partightenfactor0

\f0\b\fs36 \cf0 \strokec2 Requirements\
\pard\pardeftab720\sa280\partightenfactor0

\fs28 \cf0 Must Have (MVP)\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls2\ilvl0
\f1\b0\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Ingest swap blotters/events (NewTrade, Amend, Unwind, Terminate, FixingPublished) with idempotency and replay.\
\ls2\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Event-sourcing of lifecycle events with deterministic rebuild of aggregates.\
\ls2\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Maintain canonical trade record (CTR) and position ledger (lots) with versioning and full audit trail.\
\ls2\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Generate full cashflow schedules for supported product templates (accruals, interest, fees, dividends, principal, resets).\
\ls2\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Handle fixings/resets: apply floating rate observations and recompute affected cashflows.\
\ls2\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Emit settlement-eligible instructions to 
\f2\fs26 settlement.instructions
\f1\fs24  (Protobuf) and persist generated cashflows in cashflow DB/schema.\
\ls2\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 API/stream for downstream consumers with schema/versioning (Protobuf + Schema Registry).\
\ls2\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Data quality controls (validation rules, enrichment, calendars/day-count lookup, reference data adapters).\
\ls2\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Operational controls: manual overrides (with approvals), rebooking, and exception queues.\
\ls2\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Reliability & performance: near-real-time event processing, at-least-once delivery, deterministic aggregate-level exactly-once semantics.\
\ls2\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Security & compliance: authentication/authorization, audit logs, PII protection, retention policies.\
\pard\pardeftab720\sa280\partightenfactor0

\f0\b\fs28 \cf0 Should Have\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls3\ilvl0
\f1\b0\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Intraday and EOD snapshots for reconciliation and recovery.\
\ls3\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Backfill/replay tooling for historical blotters.\
\ls3\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Configurable product templates and calendars/holidays.\
\ls3\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Reference data adapters (rates, calendars, counterparties, CSA metadata).\
\pard\pardeftab720\sa280\partightenfactor0

\f0\b\fs28 \cf0 Could Have\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls4\ilvl0
\f1\b0\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 What-if sandbox for simulated lifecycle events.\
\ls4\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Pluggable rules engine for client-specific lifecycle behaviors.\
\ls4\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Automated reconciliation with settlement confirmations.\
\pard\pardeftab720\sa280\partightenfactor0

\f0\b\fs28 \cf0 Won't Have (Initial MVP)\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls5\ilvl0
\f1\b0\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Real-time pricing/valuation (delegated to valuation service).\
\ls5\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Complex exotics beyond initial swap products.\
\ls5\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Collateral (outside scope).\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\cf0 \
\pard\pardeftab720\sa298\partightenfactor0

\f0\b\fs36 \cf0 Method\
\pard\pardeftab720\sa280\partightenfactor0

\fs28 \cf0 High-level architecture\
\pard\pardeftab720\sa240\partightenfactor0

\f1\b0\fs24 \cf0 The system is composed of independently deployable services communicating over Kafka (or Kafka-like broker) and using event-sourcing for trade/position aggregates.\
\pard\pardeftab720\sa240\partightenfactor0

\f0\b \cf0 \strokec2 Core components
\f1\b0 \strokec2 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls6\ilvl0
\f0\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Blotter Ingest
\f1\b0  (consumer/adapter): Accepts raw blotters (JSON/CSV or events) from trade capture, normalizes to canonical lifecycle events, validates, and writes to 
\f2\fs26 lifecycle.events
\f1\fs24  topic.\
\ls6\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Position Management
\f1\b0 : The aggregate service \'96 sole writer of canonical trade state and lots. Applies lifecycle events, maintains 
\f2\fs26 trade.aggregates
\f1\fs24  snapshots, and publishes 
\f2\fs26 position.updates
\f1\fs24  (enriched trade views) for downstream processing.\
\ls6\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Trade Store / Event Store
\f1\b0 : Appends lifecycle events and aggregate snapshots; supports rebuilds and EOD snapshots.\
\ls6\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Cashflow Management Service
\f1\b0 : Deterministically generates cashflows from enriched position views; supports recomputation on amendments, partial unwinds, terminations, and fixings. Persists cashflows to cashflow DB and publishes to 
\f2\fs26 cashflows.generated
\f1\fs24  and 
\f2\fs26 settlement.instructions
\f1\fs24  for settlement-eligible flows.\
\ls6\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Settlement Publisher
\f1\b0 : Transforms cashflow entities to Protobuf settlement messages and publishes to 
\f2\fs26 settlement.instructions
\f1\fs24  topic.\
\ls6\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Adapters / Reference Data
\f1\b0 : Curves, fixings, calendars, holidays, dividend schedules, and counterparty data.\
\ls6\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Admin UI & Manual Ops
\f1\b0 : Exception queues, approval workflows, replay/rebuild controls.\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\cf0 \strokec2 \
\pard\pardeftab720\sa298\partightenfactor0

\f0\b\fs36 \cf0 Method\
\pard\pardeftab720\sa280\partightenfactor0

\fs28 \cf0 High-level architecture\
\pard\pardeftab720\sa240\partightenfactor0

\f1\b0\fs24 \cf0 The system is composed of independently deployable services communicating over Kafka (or Kafka-like broker) and using event-sourcing for trade/position aggregates.\
\pard\pardeftab720\sa240\partightenfactor0

\f0\b \cf0 \strokec2 Core components
\f1\b0 \strokec2 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls7\ilvl0
\f0\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Blotter Ingest
\f1\b0  (consumer/adapter): Accepts raw blotters (JSON/CSV or events) from trade capture, normalizes to canonical lifecycle events, validates, and writes to 
\f2\fs26 lifecycle.events
\f1\fs24  topic.\
\ls7\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Position Management
\f1\b0 : The aggregate service \'96 sole writer of canonical trade state and lots. Applies lifecycle events, maintains 
\f2\fs26 trade.aggregates
\f1\fs24  snapshots, and publishes 
\f2\fs26 position.updates
\f1\fs24  (enriched trade views) for downstream processing.\
\ls7\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Trade Store / Event Store
\f1\b0 : Appends lifecycle events and aggregate snapshots; supports rebuilds and EOD snapshots.\
\ls7\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Cashflow Management Service
\f1\b0 : Deterministically generates cashflows from enriched position views; supports recomputation on amendments, partial unwinds, terminations, and fixings. Persists cashflows to cashflow DB and publishes to 
\f2\fs26 cashflows.generated
\f1\fs24  and 
\f2\fs26 settlement.instructions
\f1\fs24  for settlement-eligible flows.\
\ls7\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Settlement Publisher
\f1\b0 : Transforms cashflow entities to Protobuf settlement messages and publishes to 
\f2\fs26 settlement.instructions
\f1\fs24  topic.\
\ls7\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Adapters / Reference Data
\f1\b0 : Curves, fixings, calendars, holidays, dividend schedules, and counterparty data.\
\ls7\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Admin UI & Manual Ops
\f1\b0 : Exception queues, approval workflows, replay/rebuild controls.\
\pard\pardeftab720\sa280\partightenfactor0

\f0\b\fs28 \cf0 \strokec2 Data flows & Topics\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls8\ilvl0
\f2\b0\fs26 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 blotter.ingest
\f1\fs24  (input) - raw blotter payloads.\
\ls8\ilvl0
\f2\fs26 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 lifecycle.events
\f1\fs24  - normalized lifecycle events (NewTrade, Amend, Unwind, Terminate, FixingPublished).\
\ls8\ilvl0
\f2\fs26 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 trade.aggregates
\f1\fs24  - persisted aggregate snapshots and state-change events (for rebuilds).\
\ls8\ilvl0
\f2\fs26 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 position.updates
\f1\fs24  - enriched trade/lot/leg details produced by Position Management.\
\ls8\ilvl0
\f2\fs26 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 cashflows.generated
\f1\fs24  - generated cashflow events and revisions (versioned).\
\ls8\ilvl0
\f2\fs26 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 settlement.instructions
\f1\fs24  - Protobuf-encoded settlement messages published by Settlement Publisher.\
\ls8\ilvl0
\f2\fs26 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 exceptions.*
\f1\fs24  - operator exception queues.\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\cf0 \strokec2 \
\pard\pardeftab720\sa280\partightenfactor0

\f0\b\fs28 \cf0 Event model (example)\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls9\ilvl0
\f2\b0\fs26 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 NewTrade
\f1\fs24  \{ tradeId, productId, economicTermsId, parties, lots[], tradeTimestamp, sourceBlotterId \}\
\ls9\ilvl0
\f2\fs26 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Amendment
\f1\fs24  \{ tradeId, amendmentId, changedFields, effectiveDate, revisedLots[] \}\
\ls9\ilvl0
\f2\fs26 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 PartialUnwind
\f1\fs24  \{ tradeId, unwindId, lotsToRemove[], notionalReduction \}\
\ls9\ilvl0
\f2\fs26 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Termination
\f1\fs24  \{ tradeId, terminationId, terminationDate, terminationCashflows[] \}\
\ls9\ilvl0
\f2\fs26 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 FixingPublished
\f1\fs24  \{ indexId, fixingDate, fixingTime, fixingValue \}\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 Events are idempotent with 
\f2\fs26 \strokec2 eventId
\f1\fs24 \strokec2  and idempotency logic in Blotter Ingest and Position Management.\
\
\pard\pardeftab720\sa280\partightenfactor0

\f0\b\fs28 \cf0 Data model (MVP schema highlights)\
\pard\pardeftab720\sa240\partightenfactor0

\f1\b0\fs24 \cf0 We adopt a flattened payout schema (adapting FINOS CDM Rosetta) \'97 key tables (see canvas DB SQLs below): 
\f2\fs26 \strokec2 Party
\f1\fs24 \strokec2 , 
\f2\fs26 \strokec2 Underlier
\f1\fs24 \strokec2 , 
\f2\fs26 \strokec2 BasketComponent
\f1\fs24 \strokec2 , 
\f2\fs26 \strokec2 TradableProduct
\f1\fs24 \strokec2 , 
\f2\fs26 \strokec2 EconomicTerms
\f1\fs24 \strokec2 , 
\f2\fs26 \strokec2 Payout
\f1\fs24 \strokec2  (flattened), 
\f2\fs26 \strokec2 Trade
\f1\fs24 \strokec2 .\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec2 Cashflows are produced outputs and are persisted in a separate Cashflow DB by the Cashflow Management Service.\strokec2 \
(See DB DDLs included in the Implementation section.)\
\
\pard\pardeftab720\sa280\partightenfactor0

\f0\b\fs28 \cf0 Deterministic cashflow generation\
\pard\pardeftab720\sa240\partightenfactor0

\f1\b0\fs24 \cf0 Principles:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls10\ilvl0\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Cashflow generator is a pure, deterministic function of (enriched position view + reference data at a specified valuation/fixing time).\
\ls10\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Generator produces versioned cashflow records with originEventId and sequence, enabling deterministic replacement and cancellation.\
\ls10\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 On Amend/Unwind/Terminate or FixingPublished, Cashflow Service recomputes cashflows for affected legs/periods, emits a delta revision with proper cancellation flags for prior scheduled entries.\
\ls10\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Settlement-eligible cashflows are those with 
\f2\fs26 settlementDate <= businessDate
\f1\fs24  and 
\f2\fs26 settlementStatus = READY
\f1\fs24 - these are packaged and published to settlement topic.\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\cf0 \strokec2 \
\pard\pardeftab720\sa280\partightenfactor0

\f0\b\fs28 \cf0 Idempotency & Exactly-once at aggregate level\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls11\ilvl0
\f1\b0\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Use event-store with per-aggregate optimistic concurrency control (aggregate version numbers) to ensure deterministic application order.\
\ls11\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Position Management applies events in offset order per aggregate; if duplicate eventIds arrive, they are ignored.\
\ls11\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Cashflow revisions are idempotent via 
\f2\fs26 cashflowRevisionId
\f1\fs24  and source 
\f2\fs26 originEventId
\f1\fs24 .\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\cf0 \strokec2 \
\pard\pardeftab720\sa280\partightenfactor0

\f0\b\fs28 \cf0 Auditing & Lineage\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls12\ilvl0
\f1\b0\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Every state change stores: originEventId, processingTimestamp, user/operatorId (if manual), reasonCode, and signature of previousAggregateHash to chain versions.\
\ls12\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Expose read-only audit API for each trade/aggregate to replay human-readable lifecycle.\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\cf0 \strokec2 \
\pard\pardeftab720\sa298\partightenfactor0

\f0\b\fs36 \cf0 Implementation\
\pard\pardeftab720\sa280\partightenfactor0

\fs28 \cf0 Tech stack (MVP)\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls13\ilvl0
\f1\b0\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Language: Java 21,  Spring Boot which is supported by Java 21\
\ls13\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Streaming: Kafka + Confluent Schema Registry (Protobuf) for strongly-typed messages and schema evolution. But the streaming implementation should be abstracted from the application level so that we can move to another streaming/event publishing solution like MQ/Solace later\
\ls13\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Persistence: MS SQL Server (trade/position), separate MS SQL schema for Cashflows.\
\ls13\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Containerization: Docker + Kubernetes.\
\ls13\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Observability: Prometheus/Grafana, Jaeger tracing, ELK/EFK for logs.\
\ls13\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Secrets & IAM: HashiCorp Vault / Kubernetes Secrets; OAuth2 / OIDC for API authz.\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\cf0 \strokec2 \
\pard\pardeftab720\sa280\partightenfactor0

\f0\b\fs28 \cf0 APIs & Message schemas\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls14\ilvl0
\f1\b0\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Position API (gRPC + REST read models): getTrade(tradeId, version?), listTrades(filter), replayAggregate(tradeId).\
\ls14\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Admin API: replayTopicOffsets(topic, partition, offset), rebuildTrade(tradeId), approveManualOverride(overrideId).\
\ls14\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Settlement Protobuf (example):\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\cf0 \strokec2 \
\pard\pardeftab720\partightenfactor0
\cf0 \strokec2 syntax = "proto3";\
package settlement;\
message SettlementInstruction \{\
string instruction_id = 1;\
string trade_id = 2;\
string cashflow_id = 3;\
string payer_party_id = 4;\
string receiver_party_id = 5;\
string currency = 6;\
double amount = 7;\
string settlement_date = 8; // ISO date\
string payment_type = 9; // ACCRUAL, PRINCIPAL, DIVIDEND, FEE\
string originating_event_id = 10;\
string status = 11; // READY, SENT, CONFIRMED, REJECTED\
\}\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\cf0 \strokec2 \
\pard\pardeftab720\sa280\partightenfactor0

\f0\b\fs28 \cf0 Database DDLs (selected)\
\pard\pardeftab720\sa240\partightenfactor0

\fs24 \cf0 \strokec2 Party
\f1\b0 \strokec2 \
\pard\pardeftab720\partightenfactor0
\cf0 \strokec2 CREATE TABLE Party (\
party_id VARCHAR(50) PRIMARY KEY,\
party_name VARCHAR(200) NOT NULL,\
party_type VARCHAR(20) NOT NULL,\
lei_code CHAR(20) UNIQUE,\
party_identifiers NVARCHAR(MAX),\
country_of_incorporation CHAR(2),\
address NVARCHAR(MAX),\
contact_information NVARCHAR(MAX),\
regulatory_status NVARCHAR(MAX),\
credit_rating VARCHAR(10),\
is_active BIT DEFAULT 1,\
created_date DATE NOT NULL DEFAULT CAST(GETDATE() AS DATE),\
last_updated DATETIME2 DEFAULT GETDATE()\
);\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\cf0 \strokec2 \
\
\pard\pardeftab720\partightenfactor0
\cf0 \strokec2 **Party**
\f2\fs26 \strokec2 \
sql\
CREATE TABLE Party (\
    party_id VARCHAR(50) PRIMARY KEY,\
    party_name VARCHAR(200) NOT NULL,\
    party_type VARCHAR(20) NOT NULL CHECK (party_type IN ('BANK','FUND','CORPORATION','INDIVIDUAL','GOVERNMENT','OTHER')),\
    lei_code CHAR(20) UNIQUE,\
    party_identifiers NVARCHAR(MAX),\
    country_of_incorporation CHAR(2),\
    address NVARCHAR(MAX),\
    contact_information NVARCHAR(MAX),\
    regulatory_status NVARCHAR(MAX),\
    credit_rating VARCHAR(10),\
    is_active BIT DEFAULT 1,\
    created_date DATE NOT NULL DEFAULT CAST(GETDATE() AS DATE),\
    last_updated DATETIME2 DEFAULT GETDATE()\
);\

\f1\fs24 \strokec2 **Underlier**
\f2\fs26 \strokec2 \
sql\
CREATE TABLE Underlier (\
    underlier_id VARCHAR(50) PRIMARY KEY,\
    asset_type VARCHAR(20) NOT NULL CHECK (asset_type IN ('SINGLE_NAME','INDEX','BASKET')),\
    primary_identifier VARCHAR(50) NOT NULL,\
    identifier_type VARCHAR(20) NOT NULL CHECK (identifier_type IN ('ISIN','CUSIP','RIC','BLOOMBERG','INTERNAL')),\
    secondary_identifiers NVARCHAR(MAX),\
    asset_name VARCHAR(200) NOT NULL,\
    asset_description NVARCHAR(MAX),\
    currency CHAR(3) NOT NULL,\
    exchange VARCHAR(50),\
    country CHAR(2),\
    sector VARCHAR(100),\
    is_active BIT DEFAULT 1,\
    created_date DATE NOT NULL DEFAULT CAST(GETDATE() AS DATE),\
    last_updated DATETIME2 DEFAULT GETDATE()\
);\

\f1\fs24 \strokec2 **BasketComponent**
\f2\fs26 \strokec2 \
sql\
CREATE TABLE BasketComponent (\
    component_id VARCHAR(50) PRIMARY KEY,\
    basket_id VARCHAR(50) NOT NULL,\
    component_underlier_id VARCHAR(50) NOT NULL,\
    weight DECIMAL(10,6) NOT NULL CHECK (weight > 0 AND weight <= 1),\
    shares DECIMAL(18,6),\
    effective_date DATE NOT NULL,\
    termination_date DATE,\
    CONSTRAINT fk_basket_component_basket FOREIGN KEY (basket_id) REFERENCES Underlier(underlier_id),\
    CONSTRAINT fk_basket_component_underlier FOREIGN KEY (component_underlier_id) REFERENCES Underlier(underlier_id),\
    CONSTRAINT ck_basket_component_dates CHECK (termination_date IS NULL OR termination_date >= effective_date),\
    CONSTRAINT ck_basket_component_no_self_reference CHECK (basket_id != component_underlier_id)\
);\

\f1\fs24 \strokec2 **TradableProduct**
\f2\fs26 \strokec2 \
sql\
CREATE TABLE TradableProduct (\
    product_id VARCHAR(50) PRIMARY KEY,\
    product_type VARCHAR(50) NOT NULL CHECK (product_type IN ('EQUITY_SWAP_PRICE_RETURN','EQUITY_SWAP_TOTAL_RETURN','EQUITY_SWAP_VARIANCE','EQUITY_SWAP_VOLATILITY')),\
    product_name VARCHAR(200),\
    asset_class VARCHAR(50) DEFAULT 'EQUITY',\
    sub_asset_class VARCHAR(50) DEFAULT 'SWAP',\
    version INTEGER DEFAULT 1 CHECK (version > 0),\
    is_active BIT DEFAULT 1,\
    created_date DATE NOT NULL DEFAULT CAST(GETDATE() AS DATE),\
    created_by VARCHAR(100)\
);\

\f1\fs24 \strokec2 **EconomicTerms**
\f2\fs26 \strokec2 \
sql\
CREATE TABLE EconomicTerms (\
    economic_terms_id VARCHAR(50) PRIMARY KEY,\
    product_id VARCHAR(50) NOT NULL,\
    effective_date DATE NOT NULL,\
    termination_date DATE,\
    calculation_agent_id VARCHAR(50),\
    business_day_convention VARCHAR(30),\
    business_centers NVARCHAR(MAX),\
    extraordinary_events NVARCHAR(MAX),\
    version INTEGER DEFAULT 1 CHECK (version > 0),\
    CONSTRAINT fk_economic_terms_product FOREIGN KEY (product_id) REFERENCES TradableProduct(product_id),\
    CONSTRAINT fk_economic_terms_calc_agent FOREIGN KEY (calculation_agent_id) REFERENCES Party(party_id),\
    CONSTRAINT ck_economic_terms_dates CHECK (termination_date IS NULL OR termination_date >= effective_date)\
);\

\f1\fs24 \strokec2 **Payout (Flattened)**
\f2\fs26 \strokec2 \
sql\
CREATE TABLE Payout (\
    payout_id VARCHAR(50) PRIMARY KEY,\
    economic_terms_id VARCHAR(50) NOT NULL,\
    payout_type VARCHAR(20) NOT NULL CHECK (payout_type IN ('PERFORMANCE','INTEREST_RATE','DIVIDEND','FIXED')),\
    payer_party_id VARCHAR(50) NOT NULL,\
    receiver_party_id VARCHAR(50) NOT NULL,\
    payment_frequency VARCHAR(20),\
    day_count_fraction VARCHAR(10),\
    currency CHAR(3) NOT NULL,\
    settlement_currency CHAR(3),\
    fx_reset_required BIT DEFAULT 0,\
    fx_reset_frequency VARCHAR(20),\
    fx_rate_source VARCHAR(100),\
    fx_fixing_time TIME,\
    -- Interest leg fields\
    rate_type VARCHAR(20),\
    fixed_rate DECIMAL(8,4),\
    floating_rate_index VARCHAR(50),\
    spread DECIMAL(8,4),\
    reset_frequency VARCHAR(20),\
    compounding_method VARCHAR(20),\
    notional_amount DECIMAL(18,2),\
    notional_currency CHAR(3),\
    -- Performance leg fields\
    return_type VARCHAR(20),\
    initial_price DECIMAL(18,6),\
    initial_price_date DATE,\
    observation_start_date DATE,\
    observation_end_date DATE,\
    valuation_time TIME,\
    -- Dividend leg fields\
    dividend_treatment VARCHAR(20),\
    dividend_percentage DECIMAL(5,2),\
    ex_dividend_treatment VARCHAR(20),\
    withholding_tax_rate DECIMAL(5,4),\
    minimum_dividend_amount DECIMAL(18,2),\
    maximum_dividend_amount DECIMAL(18,2),\
    dividend_currency CHAR(3),\
    payment_delay_days INTEGER,\
    CONSTRAINT fk_payout_economic_terms FOREIGN KEY (economic_terms_id) REFERENCES EconomicTerms(economic_terms_id),\
    CONSTRAINT fk_payout_payer FOREIGN KEY (payer_party_id) REFERENCES Party(party_id),\
    CONSTRAINT fk_payout_receiver FOREIGN KEY (receiver_party_id) REFERENCES Party(party_id),\
    CONSTRAINT ck_payout_different_parties CHECK (payer_party_id != receiver_party_id)\
);\

\f1\fs24 \strokec2 **Trade**
\f2\fs26 \strokec2 \
sql\
CREATE TABLE Trade (\
    trade_id VARCHAR(50) PRIMARY KEY,\
    product_id VARCHAR(50) NOT NULL,\
    trade_date DATE NOT NULL,\
    trade_time DATETIME2,\
    status VARCHAR(20) DEFAULT 'ACTIVE' CHECK (status IN ('ACTIVE','TERMINATED','SUSPENDED')),\
    master_agreement_id VARCHAR(50),\
    confirmation_method VARCHAR(20),\
    created_timestamp DATETIME2 DEFAULT GETDATE(),\
    updated_timestamp DATETIME2 DEFAULT GETDATE(),\
    CONSTRAINT fk_trade_product FOREIGN KEY (product_id) REFERENCES TradableProduct(product_id),\
    CONSTRAINT ck_trade_date_not_future CHECK (trade_date <= CAST(GETDATE() AS DATE))\
);\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0

\f1\fs24 \cf0 \strokec2 \
\pard\pardeftab720\partightenfactor0
\cf0 \strokec2 My scalability requirement is such that I have 65K trades (contracts) now which can go unto 250K and per contract there could be 5K positions/underliers and per underlies there could unto 6k which can go unto 65K lots. The cashflow calculator can calculate per contract + position (considering all the lots under that position) that way we can parallel process the contract. we have roughly 1-2 hr to process this kind of load so we need to design to support this. we don't have kafka expertise for now. But we can use MQ/Solace with abstraction of underlying event streaming from business layer. we should use MS SQL Server at cashflow management svc\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\cf0 \strokec2 \
}