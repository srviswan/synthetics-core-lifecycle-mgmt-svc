# Multi-stage build for optimized image
FROM maven:3.9.4-openjdk-21-slim AS builder

WORKDIR /app

# Copy pom.xml first for better layer caching
COPY pom.xml .
COPY shared-cdm/pom.xml shared-cdm/pom.xml

# Download dependencies
RUN mvn dependency:go-offline -B

# Copy source code
COPY shared-cdm/src shared-cdm/src
COPY cashflow-management-service/src cashflow-management-service/src

# Build the application
RUN mvn clean package -DskipTests -B

# Runtime stage
FROM openjdk:21-jdk-slim

WORKDIR /app

# Install curl for health checks
RUN apt-get update && apt-get install -y curl && rm -rf /var/lib/apt/lists/*

# Create non-root user
RUN groupadd -r appuser && useradd -r -g appuser appuser

# Copy JAR from build stage
COPY --from=builder /app/cashflow-management-service/target/*.jar app.jar

# Create directories for logs and dumps
RUN mkdir -p /app/logs /app/dumps && chown -R appuser:appuser /app

# Switch to non-root user
USER appuser

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:8080/actuator/health || exit 1

# Expose port
EXPOSE 8080

# JVM tuning for containers
ENV JAVA_OPTS="-XX:+UseContainerSupport -XX:MaxRAMPercentage=75.0 -XX:+UseG1GC -XX:+UseStringDeduplication -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/app/dumps"

# Run application
ENTRYPOINT ["sh", "-c", "java $JAVA_OPTS -jar app.jar"]
